name: Deploy to DigitalOcean

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: ru-learning-app
  REGISTRY_NAME: ru-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --package-lock-only

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Run tests
        run: npm test
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Create registry if not exists
        continue-on-error: true
        run: |
          doctl registry create $REGISTRY_NAME || true

      - name: Verify registry exists
        run: |
          doctl registry get

      - name: Build container image
        run: docker build -t registry.digitalocean.com/$REGISTRY_NAME/$IMAGE_NAME:$(echo $GITHUB_SHA | head -c7) .

      - name: Log in to DigitalOcean Container Registry
        run: |
          doctl registry login --expiry-seconds 1200

      - name: Push image to DigitalOcean Container Registry
        run: |
          docker push registry.digitalocean.com/$REGISTRY_NAME/$IMAGE_NAME:$(echo $GITHUB_SHA | head -c7)

      - name: Update deployment file
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          sed -i 's|<IMAGE>|registry.digitalocean.com/'${REGISTRY_NAME}'/'${IMAGE_NAME}':'${TAG}'|' $GITHUB_WORKSPACE/k8s/deployment.yaml

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: Deploy to DigitalOcean Kubernetes
        run: |
          kubectl apply -f $GITHUB_WORKSPACE/k8s/deployment.yaml